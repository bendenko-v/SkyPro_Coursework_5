name: Build and deploy workflow
on: [ push ]

jobs:
  build_and_push:
    runs-on: ubuntu-22.04

    steps:
      - name: Clone code
        uses: actions/checkout@v2

      - name: Docker build
        run: docker build -t smopuim85/coursework_5:$GITHUB_REF_NAME-$GITHUB_RUN_ID .

      - name: Docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/coursework_5:latest

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_push

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        env:
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

      - name: Render configs
        run: |
          mkdir deploy
          envsubst < docker-compose-ci.yaml > deploy/docker-compose.yaml
          envsubst < nginx.conf > deploy/nginx.conf
          envsubst < redis.conf > deploy/redis.conf

      - name: copy files to VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "flask_app_ci"
          strip_components: 1

      - name: Deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd flask_app_ci
            docker-compose pull
            docker-compose down
            docker-compose up -d

      - name: Cleanup
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST}}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f
